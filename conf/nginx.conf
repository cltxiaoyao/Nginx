
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
error_log  logs/error.log  debug;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    lua_shared_dict ssl_sessions 16m;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
        listen       8090;
        server_name  localhost;
        
        lua_code_cache off;
        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
             content_by_lua_block {
             ngx.say('Hello,world!')
          }
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    lua_package_path "/home/nginx/openresty/lualib/resty/core/?.lua;/home/nginx/openresty/lualib/resty/?.lua;/home/nginx/openresty/lualib/ngx/?.lua;/home/nginx/openresty/lualib/ngx/ssl/?.lua;;";

	lua_shared_dict  redis_config_dict 10m;
    init_by_lua_file conf/lua/init.lua;
	
    server {
        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
        listen       443 ssl http2 ;
        server_name  localhost;

        ssl_certificate      ./ssl/server.crt;
        ssl_certificate_key  ./ssl/server.key;

        ssl_session_cache    shared:SSL:10m;
        ssl_session_timeout  30m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;
        
        #ssl_stapling on;ssl_stapling_file ocsp.staple;

        ssl_session_store_by_lua_file conf/lua/session_store.lua;
        ssl_session_fetch_by_lua_file conf/lua/session_fetch.lua;		
	# ssl_session_fetch_by_lua_file conf/lua/ceshi.lua;	
        #test redis
	#rewrite_by_lua_file  conf/lua/thumbnail.lua;

        location / {
            root   html;
            index  index.html index.htm;
        }
    }

}
